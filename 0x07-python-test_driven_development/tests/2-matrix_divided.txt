>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test invalid matrix
>>> matrix = "not a list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]

# Test division by positive integer
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix = [
...     [1.3, 2, 3],
...     [4, 5, 6.3]
... ]

# Test float int combo
>>> matrix_divided(matrix, 3)
[[0.43, 0.67, 1.0], [1.33, 1.67, 2.1]]

# Test division by zero
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

# Test pass 0 args
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# Test 1 missing arg
>>> matrix_divided(matrix)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
