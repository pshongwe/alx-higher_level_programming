Test matrix multiplication with square matrices:
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[5, 6], [7, 8]]
>>> print(matrix_mul(m_a, m_b))
[[19, 22], [43, 50]]

Test matrix multiplication with rectangular matrices:
>>> m_a = [[1, 2, 3], [4, 5, 6]]
>>> m_b = [[7, 8], [9, 10], [11, 12]]
>>> print(matrix_mul(m_a, m_b))
[[58, 64], [139, 154]]

Test error for incompatible matrix sizes:
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[5, 6, 7], [8, 9, 10], [11, 12, 13]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

Test missing one argument:
>>> print(matrix_mul([[1, 2]]))
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Test missing two arguments:
>>> print(matrix_mul())
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Test m_a is a string and m_b is a list of lists of numbers:
>>> m_a = "not a list"
>>> m_b = [[1, 2], [3, 4]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a must be a list

Test m_b must be a list
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = "not a list"
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_b must be a list

Test when m_a is a list of integers and m_b is a list of lists of numbers:
>>> m_a = [1, 2, 3]
>>> m_b = [[1, 2], [3, 4], [5, 6]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_a must be a list of lists

Test when m_a is empty and m_b is a list of lists of numbers:
>>> m_a = []
>>> m_b = [[1, 2], [3, 4]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: m_a can't be empty

Test for m_b as a list of integers:
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [5, 6]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: m_b must be a list of lists

Test ma = List of lists of numbers and mb is Empty:
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = []
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: m_b can't be empty

Test when m_a and m_b have incompatible sizes for multiplication:
>>> m_a = [[1, 2, 3], [4, 5, 6]]
>>> m_b = [[7, 8], [9, 10]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

Test for Non-Uniform Row Lengths in m_b:
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[5, 6], [7, 8, 9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

Test for Matrix Multiplication with Valid Matrices:
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[5, 6], [7, 8]]
>>> print(matrix_mul(m_a, m_b))
[[19, 22], [43, 50]]

Test for Valid Matrix Multiplication Result:
>>> m_a = [[1, 2], [3, 4]]
>>> m_b = [[2, 0], [1, 2]]
>>> print(matrix_mul(m_a, m_b))
[[4, 4], [10, 8]]
