>>> add_integer = __import__('0-add_integer').add_integer

# Test with two positive integers
>>> add_integer(1, 2)
3

# Test with a positive and a negative integer
>>> add_integer(100, -2)
98

# Test with two negative integers
>>> add_integer(-3, -5)
-8

# Test with a single argument
>>> add_integer(2)
100

# Test with a float and an integer
>>> add_integer(100.3, -2)
98

# Test with two floats
>>> add_integer(3.5, 4.5)
7

# Test with an integer and a non-numeric type (string)
>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer

# Test with a non-numeric type (string) as the first argument
>>> add_integer("Test", 4)
Traceback (most recent call last):
...
TypeError: a must be an integer

# Test with non-numeric types (NoneType)
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

# Test with two non-numeric types (NoneType and String)
>>> add_integer(None, "Test")
Traceback (most recent call last):
...
TypeError: a must be an integer

# Test large positive number
>>> add_integer(float('inf'), 1)
Traceback (most recent call last):
...
TypeError: a must be an integer

# Test large negative number
add_integer(-float('inf'), 1)
Traceback (most recent call last):
...
TypeError: b must be an integer
